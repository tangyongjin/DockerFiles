###
### AS65512 - CNIX  Test_switch
### 
###
### Define inbound filter
#
filter ps_test1_v4_as65512_in
	  int  cus_as;
    # pair prepend_aspath_1X;
    # pair prepend_aspath_2X;
    # pair prepend_aspath_3X;
  	pair send_all_1_63602;
	  pair deny_all_0_63602;

	{		
		# print "DBG0000 >>>>>>>>>>>>>>>>>>>>>>";
		# print "DBG0001 ----------------------";  
		# print "DBG0001 prefix.len"  ;
 	# 	print bgp_path.last;
		# print "DBG0002 **********************";  
	
		cus_as = 65512;
  	# reject martians


          send_all_1_63602=(1,myas);

            # accept cnix ddos 
      if (bgp_path.last = cus_as) && ( net ~ [0.0.0.0/0{32,32}]) && ( bgp_next_hop = 192.168.200.66 ) then {
       bgp_community.add(send_all_1_63602);
        print "DBG0001 **********************";
        print net;
        accept;
      }


		if  (in_martians()) then {
 	      print "DBG0002 **********************";  
       	print net;
			reject "reject:in_martians";
		}
  
  	# reject cnix router

    	if  (in_cnix_route()) then {
    	       print net;
    		   reject; #"reject:in_cnix_route";
    	    }

	 #accept deny_all_0_63602:0:63602 
        # print "DBG0009 **bgp_community********************";

         deny_all_0_63602=(0,myas);
         if ( deny_all_0_63602  ~  bgp_community  ) then {
        	    bgp_community.empty;
        	    accept;
 		 }
        #	print bgp_community;
        


	# # accept as-path prepend 1x   
 #         prepend_aspath_1X=(11,cus_as);
         
 #      	 if ((bgp_path.last = cus_as) && ( prepend_aspath_1X  ~   bgp_community  )) then {
 #               bgp_path.prepend(cus_as);
	# 		   # print "DBG0005 prepend_aspath_1X";
	# 	       #print net;
	# 		   accept; #"DBG0011  acceot  prepend_aspath_1X check ";
	# 	 }
	# # accept as-path prepend 2x
 #         prepend_aspath_2X=(12,cus_as);
         
 #      	 if ((bgp_path.last = cus_as) && ( prepend_aspath_2X  ~   bgp_community  )) then {
 #               bgp_path.prepend(cus_as);
 #               bgp_path.prepend(cus_as);
	# 		   # print "DBG0005 prepend_aspath_2X";
	# 	       #print net;
	# 		   accept; #"DBG0012  acceot  prepend_aspath_2X check ";
	# 	 }

	# # accept as-path prepend 3x
 #         prepend_aspath_3X=(13,cus_as);
         
 #      	 if ((bgp_path.last = cus_as) && ( prepend_aspath_3X  ~   bgp_community  )) then {
 #               bgp_path.prepend(cus_as);
 #               bgp_path.prepend(cus_as);
 #               bgp_path.prepend(cus_as);
	# 		   # print "DBG0005 prepend_aspath_3X";
	# 	       #print net;
	# 		   accept; #"DBG0013  acceot  prepend_aspath_3X check ";
	# 	 }

	 #accept send_all_1_63602:1:63602 
          #print "DBG0009 **bgp_community********************";

          send_all_1_63602=(1,myas);
          if  ((bgp_path.last = cus_as) && !( send_all_1_63602 ~  bgp_community )) then {
        	    #bgp_community.empty;
                bgp_community.add(send_all_1_63602);
                accept;
 		  }
 			#print bgp_community;
        
 	# reject default
	reject "defalut reject" ;
}

### Define outbound filter
filter ps_test1_v4_as65512_out
	int  cus_as;
	pair deny_sent_0_as;
	pair allow_sent_1_as;
	pair send_all_1_63602;
{
    cus_as = 65512;
    # reject martians
		if  (in_martians()) then {
 	        #print net;
			reject; #"reject:in_martians";
		}
	  # reject appoint community
		deny_sent_0_as = ( 0,cus_as );
		if ( deny_sent_0_as ~ bgp_community ) then {
		#	bgp_community.no_advertise();
			reject; #"reject 0:as";
	   	}
  	#  accept sent cnix route
  		if (in_cnix_route()) then {
  			accept; 
  		}
  	# accept appoint community
  		allow_sent_1_as = ( 1,cus_as );
  		if ( allow_sent_1_as ~ bgp_community ) then {
  			accept;
  		}
  	# accept send all
  		send_all_1_63602 = ( 1,myas);
  		if ( send_all_1_63602 ~ bgp_community ) then {
  			accept;
  		}
reject "defalut reject" ;
}


### Define protocol
## 2017-03-19 - jason with bird 1.6.3
protocol bgp test1_as65512 from PEERS {
  	description "eBGP - test switch";
  	neighbor 192.168.200.100 as 65512 ; #103.216.40.4 as 65512;
  	password "11112222";
  	import filter ps_test1_v4_as65512_in;
  	export filter ps_test1_v4_as65512_out;
}
